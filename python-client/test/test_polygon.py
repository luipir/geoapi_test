"""
    GEO_Test API

    geo_test API as RESTFul service to offer basic geo services  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: luipir@gmail.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.point3_d_dict import Point3DDict
globals()['Point3DDict'] = Point3DDict
from openapi_client.model.polygon import Polygon


class TestPolygon(unittest.TestCase):
    """Polygon unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testPolygon(self):
        """Test Polygon"""

        # test constructor
        poly = [
            Point3DDict(**{
                "lat" : 1.0,
                "lon" : 1.0,
                "altitude" : 1.0
            }), 
            Point3DDict(**{
                "lat" : 2.0,
                "lon" : 2.0,
                "altitude" : 2.0
            }),
            Point3DDict(**{
                "lat" : 3.0,
                "lon" : 3.0,
                "altitude" : 3.0
            }) ]
        model = Polygon(poly)
        self.assertTrue( hasattr(model, 'value') )
        self.assertTrue( isinstance(getattr(model, 'value'), list) )
        self.assertEqual( len(getattr(model, 'value')), 3 )
        value = getattr(model, 'value')
        for index, value in enumerate(value):
            self.assertTrue(isinstance(value, Point3DDict))
            self.assertTrue( value.lat == value.lon == value.altitude == index + 1 )
        
        # check that at least 3 point
        point = Point3DDict(**{
                "lat" : 1.0,
                "lon" : 1.0,
                "altitude" : 1.0
            })
        for num_points in range(0,2):
            list_of_points = [point for _ in range(num_points)]
            with self.assertRaises(ValueError) as ex:
                Polygon(list_of_points)

        # Expected point as Point3DDict
        poly = [1,2,3]
        try:
            Polygon(poly)
        except (openapi_client.exceptions.ApiTypeError) as ex:
            self.assertTrue('Required value type is Point3DDict' in str(ex))


if __name__ == '__main__':
    unittest.main()
