"""
    GEO_Test API

    geo_test API as RESTFul service to offer basic geo services  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: luipir@gmail.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.polygon import Polygon
from openapi_client.model.props import Props
from openapi_client.model.point3_d_dict import Point3DDict
globals()['Point3DDict'] = Point3DDict
globals()['Polygon'] = Polygon
globals()['Props'] = Props
from openapi_client.model.area import Area


class TestArea(unittest.TestCase):
    """Area unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testArea(self):
        """Test Area"""
        props = Props(**{
            'key1': 'value1',
            'key2': 'value2'
        })

        poly = Polygon([
            Point3DDict(**{
                "lat" : 1.0,
                "lon" : 1.0,
                "altitude" : 1.0
            }), 
            Point3DDict(**{
                "lat" : 2.0,
                "lon" : 2.0,
                "altitude" : 2.0
            }),
            Point3DDict(**{
                "lat" : 3.0,
                "lon" : 3.0,
                "altitude" : 3.0
            }) ])

        args = {
            'name': 'Luigi Pirelli',
            'date': '2012-04-19',
            'poly': poly,
            'props' : props
        }
        model = Area(**args)
        for key in args:
            self.assertTrue( hasattr(model, key) )
            self.assertEqual( getattr(model, key), args[key])
        
        # check any arg is required removing one per time
        for key in args:
            reduced_args = args.copy()
            reduced_args.pop(key)
            try:
                Area(**reduced_args)
            except (TypeError) as ex:
                self.assertTrue('missing 1 required positional argument:' in str(ex))

        # check expected type for each parameter
        for key in args:
            reduced_args = args.copy()
            reduced_args[key] = None
            try:
                Area(**reduced_args)
            except (openapi_client.exceptions.ApiTypeError) as ex:
                self.assertTrue('Invalid type for variable' in str(ex))


if __name__ == '__main__':
    unittest.main()
