openapi: 3.0.0
info:
  title: GEO_Test API
  description: geo_test API as RESTFul service to offer basic geo services
  version: '1.0.0'
  contact:
    email: luipir@gmail.com
  license:
    name: Creative Common CC-BY-SA
    url: 'https://creativecommons.org/licenses/by-sa/4.0/'
servers:
  - description: Simple RESTful service of geo data
    # url: https://virtserver.swaggerhub.com/luipir/geo_test/1.0.0
    url: https://localhost:8080/luipir/geo_test/1.0.0
tags:
 - name: modification
   description: Api to manage resource modification
 - name: search
   description: Api to manage resources search

paths:

  /areas:
    post:
      tags:
        - modification
      summary: Add new/modify Area resource
      operationId: addArea
      description: |
        Add a new Area resource or modify existing if unique name already exist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Area'
        description: Area resource to add/substitute
      responses:
        '204':
          description: The resource was created/substited successfully.

  /areas/{name}:
    parameters:
      - name: name
        in: path
        description: resource unique name
        required: true
        schema:
          type: string
    get:
      tags:
        - search
      summary: Retrieve a Area resource by unique name.
      operationId: getAreaByName
      description: |
        Retrieve a Area resource by unique name.
      responses:
        '200':
          $ref: '#/components/responses/200Success'
        '400':
          $ref: '#/components/responses/400badInput'
        '404':
          $ref: '#/components/responses/404NoResource'
    delete:
      tags:
        - modification
      summary: Delete a Area resource by name.
      operationId: deleteAreByName
      description: |
        Delete a Area resource by name.
      responses:
        '204':
          description: The resource was deleted successfully.
        '200':
          $ref: '#/components/responses/200Success'
        '400':
          $ref: '#/components/responses/400badInput'
        '404':
          $ref: '#/components/responses/404NoResource'

  /areas/{date}:
    parameters:
    - name: date
      in: path
      description: Get all resources containing the name
      required: true
      schema:
        type: string
        pattern: '^\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
        description: Custom date 
        example: "2021-01-30"
    get:
      tags:
        - search
      summary: Retrieve a Area with a specified data.
      operationId: getAreaByDate
      description: |
        Retrieve a Area resource by date.
      responses:
        '200':
          $ref: '#/components/responses/200Success'
        '400':
          $ref: '#/components/responses/400badInput'
        '404':
          $ref: '#/components/responses/404NoResource'

  /areas/properties:
    post:
      tags:
        - search
      summary: Retrieve a Area with a specified data set of properties.
      operationId: getAreaByProperties
      description: |
        Retrieve a Area resource by properties dict.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Props'
        description: Area to retrieve with matching properties
      responses:
        '200':
          $ref: '#/components/responses/200Success'
        '400':
          $ref: '#/components/responses/400badInput'
        '404':
          $ref: '#/components/responses/404NoResource'

  /areas/intersect:
    post:
      tags:
        - search
      summary: Retrieve a Area inteersecting posted polygon.
      operationId: getIntersected
      description: |
        Retrieve intersecting Area resources 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Polygon'
        description: Polygon to retrieve intersecting Area resources
      responses:
        '200':
          $ref: '#/components/responses/200Success'
        '400':
          $ref: '#/components/responses/400badInput'
        '404':
          $ref: '#/components/responses/404NoResource'

  /areas/intersection:
    post:
      tags:
        - search
      summary: Retrieve Area inside input polygon.
      operationId: getIntersection
      description: |
        Retrieve Area inside input polygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Polygon'
        description: Polygon to retrieve inner Area resources
      responses:
        '200':
          $ref: '#/components/responses/200Success'
        '400':
          $ref: '#/components/responses/400badInput'
        '404':
          $ref: '#/components/responses/404NoResource'



components:

  responses:
    #---------------------------------------------------------------------------
    '200Success':
      description: Operation success
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Area'
    '400badInput':
      description: bad input parameter
    '404NoResource':
      description: No resource found


  schemas:

    Props:
      type: object
      properties:
        string_value:
          type: string
        integer_value:
          type: number
      example:
        a_string_value: Hello!
        an_number_value: 1111.222

    Area:
      type: object
      required:
        - name
        - date
        - properties
        - area
      properties:
        name:
          type: string
          example: Luigi Pirelli
        date:
          type: string
          format: date
          example: '2021-04-17'
        properties:
          $ref: '#/components/schemas/Props'
        area:
          $ref: '#/components/schemas/Polygon'

    Point3D:
      type: array
      description: Point in 3D space
      minItems: 2
      maxItems: 3
      items:
        type: number
      example:
        [-8.226312, 43.29702, 77]

    Polygon:
      type: array
      description: Polygon not closed coordinates.
      items:
        $ref: '#/components/schemas/Point3D'
      minItems: 3
